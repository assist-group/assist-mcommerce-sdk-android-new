plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'io.gitlab.arturbosch.detekt'
}

android {
    namespace 'ru.assist.demo'
    compileSdk 34

    defaultConfig {
        applicationId "ru.assist.demo"
        minSdk 24
        targetSdk 34
        versionCode sdk_version_code
        versionName sdk_version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    viewBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach { output ->
            outputFileName = "assistsdkdemo-${variant.versionName}-${variant.baseName}-${getDate("yyyyMMdd-HHmmss")}.apk"
        }
    }
}

detekt {
    buildUponDefaultConfig = true // preconfigure defaults
    allRules = true // activate all available (even unstable) rules.

    basePath = projectDir
}

tasks.detekt.jvmTarget = "1.8"

tasks.named("detekt").configure {
    reports {
        html.required.set(true)
        html.outputLocation.set(file("build/reports/detekt/detekt.html"))
        xml.required.set(false)
        txt.required.set(true)
        txt.outputLocation.set(file("build/reports/detekt/detekt.txt"))
        sarif.required.set(true)
        sarif.outputLocation.set(file("build/reports/detekt/detekt.sarif"))
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar","*.aar"])
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.5'
    implementation project(path: ':sdk')
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.12.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    implementation 'androidx.appcompat:appcompat:1.7.0'

    // Google Wallet
    implementation 'com.google.android.gms:play-services-auth:21.2.0'
    implementation 'com.google.android.gms:play-services-wallet:19.4.0'

    implementation 'com.nimbusds:nimbus-jose-jwt:9.30.1'
    implementation 'org.bitbucket.b_c:jose4j:0.9.6'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'

    implementation 'io.card:android-sdk:5.5.1'
}

def static getDate(String format = "dd.MM.yyyy HH:mm:ss") {
    new Date().format(format)
}